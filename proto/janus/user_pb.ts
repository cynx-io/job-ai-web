// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file hermes/user.proto (package hermes, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { BaseRequest, BaseResponse } from "../core_pb";
import { file_core } from "../core_pb";
import { file_hermes_generic } from "./generic_pb";
import type { User } from "./object_pb";
import { file_hermes_object } from "./object_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file hermes/user.proto.
 */
export const file_hermes_user: GenFile = /*@__PURE__*/
  fileDesc("ChFoZXJtZXMvdXNlci5wcm90bxIGaGVybWVzIpcCChFVcHNlcnRVc2VyUmVxdWVzdBIfCgRiYXNlGAEgASgLMhEuY29yZS5CYXNlUmVxdWVzdBIQCghhdXRoMF9pZBgCIAEoCRINCgVlbWFpbBgDIAEoCRIRCgRuYW1lGAQgASgJSACIAQESHgoRc3Vic2NyaXB0aW9uX3RpZXIYBSABKAlIAYgBARI2Cg1sYXN0X2xvZ2luX2F0GAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgCiAEBEhYKCWlzX2FjdGl2ZRgHIAEoCEgDiAEBQgcKBV9uYW1lQhQKEl9zdWJzY3JpcHRpb25fdGllckIQCg5fbGFzdF9sb2dpbl9hdEIMCgpfaXNfYWN0aXZlIkwKDFVzZXJSZXNwb25zZRIgCgRiYXNlGAEgASgLMhIuY29yZS5CYXNlUmVzcG9uc2USGgoEdXNlchgCIAEoCzIMLmhlcm1lcy5Vc2VyMlQKEUhlcm1lc1VzZXJTZXJ2aWNlEj8KClVwc2VydFVzZXISGS5oZXJtZXMuVXBzZXJ0VXNlclJlcXVlc3QaFC5oZXJtZXMuVXNlclJlc3BvbnNlIgBCEloQaGVybWVzL2FwaS9wcm90b2IGcHJvdG8z", [file_google_protobuf_timestamp, file_core, file_hermes_generic, file_hermes_object]);

/**
 * @generated from message hermes.UpsertUserRequest
 */
export type UpsertUserRequest = Message<"hermes.UpsertUserRequest"> & {
  /**
   * @generated from field: core.BaseRequest base = 1;
   */
  base?: BaseRequest;

  /**
   * @generated from field: string auth0_id = 2;
   */
  auth0Id: string;

  /**
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * @generated from field: optional string name = 4;
   */
  name?: string;

  /**
   * @generated from field: optional string subscription_tier = 5;
   */
  subscriptionTier?: string;

  /**
   * @generated from field: optional google.protobuf.Timestamp last_login_at = 6;
   */
  lastLoginAt?: Timestamp;

  /**
   * @generated from field: optional bool is_active = 7;
   */
  isActive?: boolean;
};

/**
 * Describes the message hermes.UpsertUserRequest.
 * Use `create(UpsertUserRequestSchema)` to create a new message.
 */
export const UpsertUserRequestSchema: GenMessage<UpsertUserRequest> = /*@__PURE__*/
  messageDesc(file_hermes_user, 0);

/**
 * @generated from message hermes.UserResponse
 */
export type UserResponse = Message<"hermes.UserResponse"> & {
  /**
   * @generated from field: core.BaseResponse base = 1;
   */
  base?: BaseResponse;

  /**
   * @generated from field: hermes.User user = 2;
   */
  user?: User;
};

/**
 * Describes the message hermes.UserResponse.
 * Use `create(UserResponseSchema)` to create a new message.
 */
export const UserResponseSchema: GenMessage<UserResponse> = /*@__PURE__*/
  messageDesc(file_hermes_user, 1);

/**
 * User service definition
 *
 * @generated from service hermes.HermesUserService
 */
export const HermesUserService: GenService<{
  /**
   * Upsert user (create or update)
   *
   * @generated from rpc hermes.HermesUserService.UpsertUser
   */
  upsertUser: {
    methodKind: "unary";
    input: typeof UpsertUserRequestSchema;
    output: typeof UserResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_hermes_user, 0);

